spring.datasource.url=jdbc:mysql://localhost:3306/testpayroll?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=apu
spring.datasource.password=tigerit
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.generate-ddl=false
spring.jpa.show-sql=false

spring.mvc.view.prefix: /view/
spring.mvc.view.suffix: .jsp
spring.messages.basename=validation
server.servlet.contextPath=/service-api



#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.dialect.storage_engine=innodb
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=true
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#spring.jackson.serialization.write-dates-as-timestamps = false
#spring.mvc.throw-exception-if-no-handler-found=true

#swagger.oauth.url=http://localhost:${server.port}/payroll-api

#for auth2
security.oauth2.resource.filter-order=3
#app.client.id=test-webapp-rw
#app.client.secret=test-webapp-rw-1234
auth.server.schem=http

server.port=9000
host.full.dns.auth.link=http://localhost:${server.port}/service-api/oauth
security.oauth2.resource.tokenInfoUri=http://localhost:${server.port}/service-api/oauth/check_token
security.oauth2.resource.preferTokenInfo=true

#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
